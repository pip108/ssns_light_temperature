{
  "{\"sourceRoot\":\"/home/perpus/contiki-ng/ssns_light_temperature/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/perpus/contiki-ng/ssns_light_temperature/backend\",\"filename\":\"/home/perpus/contiki-ng/ssns_light_temperature/backend/main.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/perpus/contiki-ng/ssns_light_temperature/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
      "filename": "/home/perpus/contiki-ng/ssns_light_temperature/backend/main.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/perpus/contiki-ng/ssns_light_temperature/backend/main.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/perpus/contiki-ng/ssns_light_temperature/backend/main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dgram = require('dgram');\n\nvar server = dgram.createSocket('udp6');\n\nvar express = require('express');\n\nvar cors = require('cors');\n\nvar app = express();\n\nvar expressWs = require('express-ws')(app);\n\nvar mongoose = require('mongoose');\n\napp.use(cors());\nvar api_port = 3333;\nvar PORT = 5678;\nvar db_url = 'mongodb://192.168.1.140/ssns_lt';\nmongoose.connect(db_url, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nvar db = mongoose.connection;\ndb.on('error', function (error) {\n  console.log('error', error);\n});\ndb.on('open', function () {\n  return console.log('mongodb connection successfull!');\n});\n/*const nodes = [{\n    addr: 'test:test:test:test1',\n    temp: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }],\n    light: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }]\n}, {\n    addr: 'test:test:test:test2',\n    temp: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }],\n    light: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }]\n}, {\n    addr: 'test:test:test:test3',\n    temp: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }],\n    light: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }]\n}];*/\n\nvar nodes = [];\nserver.on('error', function (err) {\n  console.log(\"server error:\\n\".concat(err.stack));\n  server.close();\n});\nserver.on('message', function (msg, rinfo) {\n  console.log(\"server got: \".concat(msg, \" from \").concat(rinfo.address, \":\").concat(rinfo.port));\n  var node = nodes.find(function (x) {\n    return x.addr == rinfo.address;\n  });\n\n  if (!node) {\n    node = {\n      addr: rinfo.address,\n      light: [],\n      temp: []\n    };\n    nodes.push(node);\n  }\n\n  var status = JSON.parse(msg);\n  var adc_temp = status.temp * 4096 / 30000;\n  var r_temp = (4095 - adc_temp) * 10 / adc_temp;\n  var temp = 1 / (Math.log(r_temp / 10) / 3975 + 1 / 298.15) - 273.15;\n  var adc_light = status.light * 4096 / 30000;\n  var r_light = (4095 - adc_light) * 10 / adc_light;\n  var light = 63 * Math.pow(r_light, -0.7);\n  console.log(\"temp \".concat(temp));\n  console.log(\"light \".concat(light));\n  node.temp.unshift({\n    value: temp,\n    timestamp: new Date()\n  });\n  node.light.unshift({\n    value: light,\n    timestamp: new Date()\n  });\n  sendToAllWs(nodes_payload());\n});\nserver.on('listening', function () {\n  var address = server.address();\n  console.log(\"server listening \".concat(address.address, \":\").concat(address.port));\n});\nserver.bind(PORT);\n\nfunction sendToAllWs(payload) {\n  var clients = expressWs.getWss('/').clients;\n  clients.forEach(function (client) {\n    return client.send(JSON.stringify(payload));\n  });\n}\n\napp.get('/',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var r;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _db[\"default\"].Node.find({});\n\n          case 2:\n            r = _context2.sent;\n            res.send(r);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/set_timer/:t',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var r;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _db[\"default\"].Node.find({});\n\n          case 2:\n            r = _context3.sent;\n            server.send(\"set_timer \" + req.params.t, 5678, \"fd00::212:4b00:14b5:f41c\");\n            res.send(r);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.post('/set_timer',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            server.send(\"set_timer \" + req.body.timer, req.body.timer);\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.get('/:id',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var r;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _db[\"default\"].Sensor.find({\n              node: {\n                addr: req.params.id\n              }\n            });\n\n          case 2:\n            r = _context5.sent;\n            res.send(r);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nvar i = 1;\napp.get('/test/:addr',\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var n, s;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _db[\"default\"].Node.findOne({\n              addr: req.params.addr\n            });\n\n          case 2:\n            n = _context6.sent;\n            s = new _db[\"default\"].Sensor({\n              type: 'light',\n              value: 0.12,\n              timestamp: new Date(),\n              node: n\n            });\n            s.save();\n            res.send('ok');\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref6.apply(this, arguments);\n  };\n}());\n\nfunction nodes_payload() {\n  return {\n    msg: 'nodes',\n    data: nodes\n  };\n}\n\napp.ws('/', function (ws, req) {\n  console.log('Socket Connected');\n  ws.send(nodes_payload());\n});\napp.listen(api_port, function () {\n  return console.log(\"Light & Temperature monitoring backend listening on \".concat(api_port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "dgram",
        "require",
        "server",
        "createSocket",
        "express",
        "cors",
        "app",
        "expressWs",
        "mongoose",
        "use",
        "api_port",
        "PORT",
        "db_url",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "then",
        "db",
        "connection",
        "on",
        "error",
        "console",
        "log",
        "nodes",
        "err",
        "stack",
        "close",
        "msg",
        "rinfo",
        "address",
        "port",
        "node",
        "find",
        "x",
        "addr",
        "light",
        "temp",
        "push",
        "status",
        "JSON",
        "parse",
        "adc_temp",
        "r_temp",
        "Math",
        "adc_light",
        "r_light",
        "pow",
        "unshift",
        "value",
        "timestamp",
        "Date",
        "sendToAllWs",
        "nodes_payload",
        "bind",
        "payload",
        "clients",
        "getWss",
        "forEach",
        "client",
        "send",
        "stringify",
        "get",
        "req",
        "res",
        "models",
        "Node",
        "r",
        "params",
        "t",
        "post",
        "body",
        "timer",
        "Sensor",
        "id",
        "i",
        "findOne",
        "n",
        "s",
        "type",
        "save",
        "data",
        "ws",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
      "sourcesContent": [
        "const dgram = require('dgram');\nconst server = dgram.createSocket('udp6');\nconst express = require('express');\nvar cors = require('cors')\nconst app = express();\nconst expressWs = require('express-ws')(app);\nconst mongoose = require('mongoose');\napp.use(cors());\nconst api_port = 3333;\n\n\nimport models from './db';\n\nconst PORT = 5678;\nconst db_url = 'mongodb://192.168.1.140/ssns_lt';\n\nmongoose.connect(db_url, { useNewUrlParser: true, useUnifiedTopology: true }).then(async () => {\n});\n\nconst db = mongoose.connection;\ndb.on('error', error => {\n    console.log('error', error);\n});\ndb.on('open', () => console.log('mongodb connection successfull!'));\n\n/*const nodes = [{\n    addr: 'test:test:test:test1',\n    temp: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }],\n    light: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }]\n}, {\n    addr: 'test:test:test:test2',\n    temp: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }],\n    light: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }]\n}, {\n    addr: 'test:test:test:test3',\n    temp: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }],\n    light: [{ value: 0.1, timestamp: new Date() }, { value: 0.2, timestamp: new Date() }]\n}];*/\n\n\nconst nodes = [];\n\nserver.on('error', (err) => {\n    console.log(`server error:\\n${err.stack}`);\n    server.close();\n});\n\nserver.on('message', (msg, rinfo) => {\n    console.log(`server got: ${msg} from ${rinfo.address}:${rinfo.port}`);\n    let node = nodes.find(x => x.addr == rinfo.address);\n\n    if (!node) {\n        node = { addr: rinfo.address, light: [], temp: [] };\n        nodes.push(node);\n    }\n    const status = JSON.parse(msg);\n    \n    const adc_temp = status.temp * 4096 / 30000;\n    const r_temp = (4095 - adc_temp) * 10 / adc_temp;\n    const temp = 1 / (Math.log(r_temp / 10) / 3975 + 1 / 298.15) - 273.15;\n\n\n    const adc_light = status.light * 4096 / 30000;\n    const r_light = (4095 - adc_light) * 10 / adc_light;\n    const light = 63 * Math.pow(r_light, -0.7);\n\n    console.log(`temp ${temp}`);\n    console.log(`light ${light}`);\n    node.temp.unshift({ value: temp, timestamp: new Date() });\n    node.light.unshift({ value: light, timestamp: new Date() });\n\n    sendToAllWs(nodes_payload());\n});\n\nserver.on('listening', () => {\n    const address = server.address();\n    console.log(`server listening ${address.address}:${address.port}`);\n});\n\nserver.bind(PORT);\n\nfunction sendToAllWs(payload) {\n    const clients = expressWs.getWss('/').clients;\n    clients.forEach(client => client.send(JSON.stringify(payload)));\n}\n\n\napp.get('/', async (req, res) => {\n    const r = await models.Node.find({});\n    res.send(r);\n});\n\napp.get('/set_timer/:t', async (req, res) => {\n    const r = await models.Node.find({});\n    server.send(\"set_timer \" + req.params.t, 5678, \"fd00::212:4b00:14b5:f41c\");\n    res.send(r);\n});\n\napp.post('/set_timer', async (req, res) => {\n    server.send(\"set_timer \" + req.body.timer, req.body.timer);\n});\n\napp.get('/:id', async (req, res) => {\n    const r = await models.Sensor.find({ node: { addr: req.params.id }});\n    res.send(r);\n});\n\nlet i = 1;\napp.get('/test/:addr', async (req, res) => {\n    const n = await models.Node.findOne({ addr: req.params.addr });\n    const s = new models.Sensor({\n        type: 'light',\n        value: 0.12,\n        timestamp: new Date(),\n        node: n\n    });\n    s.save();\n    res.send('ok');\n});\n\n\n\nfunction nodes_payload() {\n    return {\n        msg: 'nodes',\n        data: nodes\n    };\n}\n\napp.ws('/', function (ws, req) {\n    console.log('Socket Connected');\n    ws.send(nodes_payload());\n});\n\napp.listen(api_port, () => console.log(`Light & Temperature monitoring backend listening on ${api_port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1572188357913
  },
  "{\"sourceRoot\":\"/home/perpus/contiki-ng/ssns_light_temperature/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/perpus/contiki-ng/ssns_light_temperature/backend\",\"filename\":\"/home/perpus/contiki-ng/ssns_light_temperature/backend/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/perpus/contiki-ng/ssns_light_temperature/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
      "filename": "/home/perpus/contiki-ng/ssns_light_temperature/backend/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/perpus/contiki-ng/ssns_light_temperature/backend/db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/perpus/contiki-ng/ssns_light_temperature/backend/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sensorSchema = new _mongoose[\"default\"].Schema({\n  type: {\n    type: String\n  },\n  value: {\n    type: Number\n  },\n  timestamp: {\n    type: Date\n  },\n  node: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: 'Node'\n  }\n});\n\nvar Sensor = _mongoose[\"default\"].model('Sensor', sensorSchema);\n\nvar nodeSchema = new _mongoose[\"default\"].Schema({\n  addr: {\n    type: String,\n    unique: true\n  },\n  name: {\n    type: String\n  }\n});\n\nvar Node = _mongoose[\"default\"].model('Node', nodeSchema);\n\nvar models = {\n  Node: Node,\n  Sensor: Sensor\n};\nvar _default = models;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInNlbnNvclNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwidHlwZSIsIlN0cmluZyIsInZhbHVlIiwiTnVtYmVyIiwidGltZXN0YW1wIiwiRGF0ZSIsIm5vZGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiU2Vuc29yIiwibW9kZWwiLCJub2RlU2NoZW1hIiwiYWRkciIsInVuaXF1ZSIsIm5hbWUiLCJOb2RlIiwibW9kZWxzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxZQUFZLEdBQUcsSUFBSUMscUJBQVNDLE1BQWIsQ0FBb0I7QUFDckNDLEVBQUFBLElBQUksRUFBRTtBQUNGQSxJQUFBQSxJQUFJLEVBQUVDO0FBREosR0FEK0I7QUFJckNDLEVBQUFBLEtBQUssRUFBRTtBQUNIRixJQUFBQSxJQUFJLEVBQUVHO0FBREgsR0FKOEI7QUFPckNDLEVBQUFBLFNBQVMsRUFBRTtBQUNQSixJQUFBQSxJQUFJLEVBQUVLO0FBREMsR0FQMEI7QUFVckNDLEVBQUFBLElBQUksRUFBRTtBQUNGTixJQUFBQSxJQUFJLEVBQUVGLHFCQUFTQyxNQUFULENBQWdCUSxLQUFoQixDQUFzQkMsUUFEMUI7QUFDb0NDLElBQUFBLEdBQUcsRUFBRTtBQUR6QztBQVYrQixDQUFwQixDQUFyQjs7QUFjQSxJQUFNQyxNQUFNLEdBQUdaLHFCQUFTYSxLQUFULENBQWUsUUFBZixFQUF5QmQsWUFBekIsQ0FBZjs7QUFHQSxJQUFNZSxVQUFVLEdBQUcsSUFBSWQscUJBQVNDLE1BQWIsQ0FBb0I7QUFDbkNjLEVBQUFBLElBQUksRUFBRTtBQUNGYixJQUFBQSxJQUFJLEVBQUVDLE1BREo7QUFFRmEsSUFBQUEsTUFBTSxFQUFFO0FBRk4sR0FENkI7QUFLbkNDLEVBQUFBLElBQUksRUFBRTtBQUNGZixJQUFBQSxJQUFJLEVBQUVDO0FBREo7QUFMNkIsQ0FBcEIsQ0FBbkI7O0FBVUEsSUFBTWUsSUFBSSxHQUFHbEIscUJBQVNhLEtBQVQsQ0FBZSxNQUFmLEVBQXVCQyxVQUF2QixDQUFiOztBQUVBLElBQU1LLE1BQU0sR0FBRztBQUFFRCxFQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUU4sRUFBQUEsTUFBTSxFQUFOQTtBQUFSLENBQWY7ZUFDZU8sTSIsInNvdXJjZVJvb3QiOiIvaG9tZS9wZXJwdXMvY29udGlraS1uZy9zc25zX2xpZ2h0X3RlbXBlcmF0dXJlL2JhY2tlbmQiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IHNlbnNvclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIHR5cGU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgIH0sXG4gICAgdmFsdWU6IHtcbiAgICAgICAgdHlwZTogTnVtYmVyXG4gICAgfSxcbiAgICB0aW1lc3RhbXA6IHtcbiAgICAgICAgdHlwZTogRGF0ZSxcbiAgICB9LFxuICAgIG5vZGU6IHtcbiAgICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLCByZWY6ICdOb2RlJ1xuICAgIH1cbn0pO1xuY29uc3QgU2Vuc29yID0gbW9uZ29vc2UubW9kZWwoJ1NlbnNvcicsIHNlbnNvclNjaGVtYSk7XG5cblxuY29uc3Qgbm9kZVNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIGFkZHI6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICB1bmlxdWU6IHRydWVcbiAgICB9LFxuICAgIG5hbWU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgfSxcbn0pO1xuXG5jb25zdCBOb2RlID0gbW9uZ29vc2UubW9kZWwoJ05vZGUnLCBub2RlU2NoZW1hKTtcblxuY29uc3QgbW9kZWxzID0geyBOb2RlLCBTZW5zb3IgfTtcbmV4cG9ydCBkZWZhdWx0IG1vZGVscztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "sensorSchema",
        "mongoose",
        "Schema",
        "type",
        "String",
        "value",
        "Number",
        "timestamp",
        "Date",
        "node",
        "Types",
        "ObjectId",
        "ref",
        "Sensor",
        "model",
        "nodeSchema",
        "addr",
        "unique",
        "name",
        "Node",
        "models"
      ],
      "mappings": ";;;;;;;AACA;;;;AAEA,IAAMA,YAAY,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACrCC,EAAAA,IAAI,EAAE;AACFA,IAAAA,IAAI,EAAEC;AADJ,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACHF,IAAAA,IAAI,EAAEG;AADH,GAJ8B;AAOrCC,EAAAA,SAAS,EAAE;AACPJ,IAAAA,IAAI,EAAEK;AADC,GAP0B;AAUrCC,EAAAA,IAAI,EAAE;AACFN,IAAAA,IAAI,EAAEF,qBAASC,MAAT,CAAgBQ,KAAhB,CAAsBC,QAD1B;AACoCC,IAAAA,GAAG,EAAE;AADzC;AAV+B,CAApB,CAArB;;AAcA,IAAMC,MAAM,GAAGZ,qBAASa,KAAT,CAAe,QAAf,EAAyBd,YAAzB,CAAf;;AAGA,IAAMe,UAAU,GAAG,IAAId,qBAASC,MAAb,CAAoB;AACnCc,EAAAA,IAAI,EAAE;AACFb,IAAAA,IAAI,EAAEC,MADJ;AAEFa,IAAAA,MAAM,EAAE;AAFN,GAD6B;AAKnCC,EAAAA,IAAI,EAAE;AACFf,IAAAA,IAAI,EAAEC;AADJ;AAL6B,CAApB,CAAnB;;AAUA,IAAMe,IAAI,GAAGlB,qBAASa,KAAT,CAAe,MAAf,EAAuBC,UAAvB,CAAb;;AAEA,IAAMK,MAAM,GAAG;AAAED,EAAAA,IAAI,EAAJA,IAAF;AAAQN,EAAAA,MAAM,EAANA;AAAR,CAAf;eACeO,M",
      "sourceRoot": "/home/perpus/contiki-ng/ssns_light_temperature/backend",
      "sourcesContent": [
        "\nimport mongoose from 'mongoose';\n\nconst sensorSchema = new mongoose.Schema({\n    type: {\n        type: String,\n    },\n    value: {\n        type: Number\n    },\n    timestamp: {\n        type: Date,\n    },\n    node: {\n        type: mongoose.Schema.Types.ObjectId, ref: 'Node'\n    }\n});\nconst Sensor = mongoose.model('Sensor', sensorSchema);\n\n\nconst nodeSchema = new mongoose.Schema({\n    addr: {\n        type: String,\n        unique: true\n    },\n    name: {\n        type: String\n    },\n});\n\nconst Node = mongoose.model('Node', nodeSchema);\n\nconst models = { Node, Sensor };\nexport default models;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572187365509
  }
}